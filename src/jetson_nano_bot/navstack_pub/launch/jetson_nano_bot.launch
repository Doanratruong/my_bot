<launch>
	<!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames -->
	<node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />
	<node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0 0 0 0 base_footprint base_link 30" />
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0 0 0 0 base_link laser 30" />
	<node pkg="tf" type="static_transform_publisher" name="base_footprint_to_map" args="0 0 0 0 0 0 odom base_footprint 30" />

	<!-- open port USB0 for Arduino -->
	<node pkg="rosserial_python" type="serial_node.py" name="serial_node">
	  <param name="port" value="/dev/ttyUSB0"/>
	  <param name="baud" value="57600"/>
	</node>
	
	<!-- Publish: /odom_data_euler, /odom_data_quat -->
  	<node pkg="localization_data_pub" type="ekf_odom_pub" name="ekf_odom_pub">
  	</node> 
  	
	<arg name="map_file" default="$(find navstack_pub)/maps/my_map.yaml"/>
	<node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
	
	<!-- publish /robot_pose_ekf/odom_ombined -->
	<!-- <remap from="odom" to="odom_data_quat" /> -->
	<!-- <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
	  <param name="output_frame" value="odom"/>
	  <param name="base_footprint_frame" value="base_footprint"/>
	  <param name="freq" value="30.0"/>
	  <param name="sensor_timeout" value="1.0"/>
	  <param name="odom_used" value="true"/>
	  <param name="vo_used" value="false"/>
	  <param name="gps_used" value="false"/>
	  <param name="debug" value="false"/>
	  <param name="self_diagnose" value="false"/>
	</node>-->
	
	<!-- Initial Pose and Goal Publisher -->
	<!-- Publish: /initialpose, /move_base_simple/goal -->
	<node pkg="rviz" type="rviz" name="rviz">
	</node> 
	 
	<!-- Subscribe: /initialpose, /move_base_simple/goal -->
	<!-- Publish: /initial_2d, /goal_2d -->
	<node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
	</node>   
	<!-- <include file="$(find rplidar_ros)/launch/rplidar.launch" /> -->
	
	<!-- Add AMCL example for differential drive robots for Localization -->
  	<!-- Subscribe: /scan, /tf, /initialpose, /map -->
  	<!-- Publish: /amcl_pose, /particlecloud, /tf -->
  	<include file="$(find amcl)/examples/amcl_diff.launch"/>
  	
	<!-- Move Base Node -->
	<!-- Subscribe: /move_base_simple/goal -->
	<!-- Publish: /cmd_vel -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	  <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
	  <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
	  <rosparam file="$(find navstack_pub)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
	  <rosparam file="$(find navstack_pub)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
	  <rosparam file="$(find navstack_pub)/param/base_local_planner_params.yaml" command="load" />
	</node>
</launch>
